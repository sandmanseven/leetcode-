 public TreeNode buildTree(int[] inorder, int[] postorder) {
          if(inorder.length==0&&postorder.length==0){
              return null;
          }
          int ip=inorder.length-1;
          int pp=postorder.length-1;
          TreeNode root=new TreeNode(postorder[pp]);
          TreeNode prev=null;
          Stack<TreeNode> stack=new Stack<TreeNode>();
          stack.push(root);
          pp--;
          while(pp>=0){
              while(!stack.isEmpty()&&stack.peek().val==inorder[ip]){
                  prev=stack.pop();
                  ip--;
              }
              TreeNode newNode=new TreeNode(postorder[pp]);
              if(prev!=null){
                  prev.left=newNode;
                  
              }else if(!stack.isEmpty()){
                  TreeNode curTop=stack.peek();
                  curTop.right=newNode;
              }
              stack.push(newNode);
              prev=null;
              pp--;
          }
          return root;
    }
